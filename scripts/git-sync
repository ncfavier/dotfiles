#!/bin/bash
#
# git-sync - sync local repositories with a set of remotes
# TODO: move remote definitions to a config file

declare -A should_sync
for repo do should_sync[$repo]=1; done

declare -A remotes=(
    [~/.local/share/emojilib]='https://github.com/muan/emojilib'
)

while read -r repo; do
    name=${repo##*/} name=${name%.git}
    case $name in
        dotfiles) dir=~/.dots;;
        *) dir=~/git/$name;;
    esac
    remotes[$dir]=monade.li:${repo%.git}
done < <(ssh monade.li 'printf %s\\n /srv/git/*')

while read -rn1 && read -r repo; do
    remotes[~git/aur/$repo]="ssh://aur@aur.archlinux.org/$repo.git"
done < <(ssh aur@aur.archlinux.org list-repos)

for dir in "${!remotes[@]}"; do
    (( $# && ! should_sync[${dir##*/}] )) && continue
    printf '%s %s\n' "$(tput bold; tput setaf 2)==>$(tput sgr0)" "$dir"
    if [[ -d $dir/.git ]]; then
        git -C "$dir" pull --rebase
    else
        git clone "${remotes[$dir]}" "$dir"
    fi
done
