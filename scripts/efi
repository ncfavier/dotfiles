#!/usr/bin/env bash
#
# efi - manage EFI Linux entries using efibootmgr

shopt -s nullglob

efibootmgr() {
    sudo efibootmgr -q "$@"
}

add_entry() (
    [[ $(type -t "entry_$id") == function ]] || return

    "entry_$id"

    : "${name?}" "${label=$name}"

    if [[ ! $kernel ]]; then
        kernel=(/boot/vmlinuz*-"$name")

        if (( ! ${#kernel[@]} )); then
            echo "Could not find a kernel for $name." >&2
            return 1
        fi
    fi

    kernel=/${kernel#/boot/}

    case $root in
    LABEL)
        root=LABEL=$name;;
    PARTLABEL)
        root=PARTLABEL=$name;;
    esac

    cmdline=("${initrd[@]/#/initrd=}" root="$root" rw "${flags[@]}" "${global_flags[@]}")

    efibootmgr --bootnum "$id" --delete-bootnum 2> /dev/null
    efibootmgr --bootnum "$id" --create \
               --disk "${esp::-1}" --part "${esp: -1}" \
               --label "$label" \
               --loader "$kernel" \
               --unicode "${cmdline[*]}"
)

. ~/.config/efi.sh || exit 1

for id in "${order[@]}"; do
    add_entry "$id"
done

(IFS=,; efibootmgr -o "${order[*]}")

command efibootmgr -uv
